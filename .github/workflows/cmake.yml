name: CMake

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Fetch submodules
      run: | 
          git submodule init 
          git submodule update
      
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Valgrind
      run: |
          sudo apt install -y --no-install-recommends valgrind 
          valgrind --error-exitcode=1 --leak-check=full --trace-children=yes -s ${{github.workspace}}/build/stardust init test_project
          valgrind --error-exitcode=1 --leak-check=full --trace-children=yes -s ${{github.workspace}}/build/stardust add-breakthrough test_breakthrough
          valgrind --error-exitcode=1 --leak-check=full --trace-children=yes -s echo "test_artifact" | ${{github.workspace}}/build/stardust create-artifact
